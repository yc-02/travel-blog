  <%- include('./partials/head.ejs') %>
<body>
    <%- include('./partials/nav.ejs')%>
    <div class="detailPage">
      <div class="detailContainer">
        <div id="detailContent">
          <div style="display: flex; justify-content:space-between; align-items: center;">
            <h2><%= blog.title %></h2>
           <% if(user && user._id.toString() === blog.user_id.toString()){ %>
            <div style="display: inline-flex; gap: 6px;">
              <div id="edit" class="btn-secondary" onclick="editBlog()">
                Edit
              </div>
              <a id="delete" data-id="<%= blog._id %>" class="btn-secondary">
                Delete
              </a>
            </div>
           <% } %>
          </div>
          <h3><%= blog.destination %></h3>
          <p class="subTitle">Updated at <%= blog.updatedAt.toDateString() %></p>
          <% blog.contents.forEach((item,index)=>{%>
            <div>
                <h3>Day <%= index+1 %></h3>
                <p><%= item %></p>
            </div>
          <% }) %>
          <% if(blog.notes){%>
            <div class="notes">
              <p><%= blog.notes %></p>
            </div>
          <% } %>
  
        </div>
        <form id="updateForm" data-days="<%=blog.days%>">
          <div style="display: flex; justify-content: end; gap: 6px;">
            <div id="edit" class="btn-secondary" onclick="closeEdit()" style="align-self: flex-end;">
              Cancel
            </div>
            <button class="btn-primary" style="align-self: center;" id="update" data-id="<%= blog._id %>" type="button">Update</button>
          </div>
              <input name="title" class="input" type="text" required value="<%= blog.title %>"/>
              <input name="destination" class="input" type="text" required value="<%= blog.destination %>"/>
              <input name="days" class="input" type="number" required value="<%=blog.days%>" min="1"/>
            <div class="contentsContainer">
              <div id="originalContents" data-contents="<%= blog.contents %>">
                <% blog.contents.forEach((item,index)=>{%>
                  <textarea name="contents" id="textarea"><%= item %></textarea>  
                <% }) %>
              </div>
              <div id="newContents"></div>
            </div>
              <textarea  name="notes" placeholder="Notes (optional)" id="notes" class="input"></textarea>
          </div>
      </form>
      </div>
      
    </div>
    <%- include('./partials/footer.ejs') %>
    <script>
        const deleteIcon = document.getElementById('delete');
        if(deleteIcon){
          deleteIcon.addEventListener('click', async (e)=>{
            e.preventDefault()
            const endpoint = `/blogs/${deleteIcon.dataset.id}`
            try{
              const res = await fetch(endpoint,{
                method:'DELETE'
              });
              if(res.ok){
                location.assign('/')
              }
            } catch(err){
              console.log(err)
            }
            })
        }


        //handle update blog

        const form =  document.getElementById('updateForm')

        form.addEventListener('keydown', function(event) {
          if (event.key === 'Enter') {
            event.preventDefault();
          }
        });

        form.days.addEventListener('change',(e)=>{
          e.preventDefault()
          addTextarea()
          })



        
        function resetContents(){
          const originalContentsContainer = document.getElementById("originalContents")
          const contents = document.querySelectorAll('#textarea')
            //remove origin data
            contents.forEach((item)=>{
                  item.remove()
                })
              //restore original data
            const originalContentsData = originalContentsContainer.dataset.contents
            const array = originalContentsData.split(',')
            array.forEach((item)=>{
              const originalTextarea = document.createElement("textarea")
              originalTextarea.id = 'textarea'
              originalTextarea.name = 'contents'
              originalTextarea.required = true;
              originalTextarea.defaultValue = item
              originalContentsContainer.appendChild(originalTextarea)
            })

        }





        function addTextarea(){
          //original data
          const originalDays = parseInt(form.dataset.days)
          const daysValue = parseInt(form.days.value)
          const originalContentsContainer = document.getElementById("originalContents")
          const contents = document.querySelectorAll('#textarea')

          //new textarea
          const newContentsContainer = document.getElementById("newContents")
          const newContents = document.querySelectorAll("#newTextarea")
          const newContentsLength = newContents.length


          if(daysValue>originalDays){
            resetContents()
            //add new textarea for extra days
            const plusDays = daysValue-originalDays-newContentsLength
            if(plusDays>0){
              const newDaysArray = Array(plusDays).fill('')
                newDaysArray.map((day,index)=>{
                    const newTextarea = document.createElement("textarea")
                    newTextarea.id = 'newTextarea'
                    newTextarea.name = 'contents'
                    newTextarea.required = true;
                    newTextarea.placeholder = `Day ${parseInt(originalDays)+index+1+newContentsLength}`
                    newContentsContainer.appendChild(newTextarea)
                })

            // reduce textarea 
            }else if(plusDays<0){
              const deleteDays = -plusDays
              for(let i=1; i<=deleteDays; i++){
                newContentsContainer.removeChild(newContents[newContents.length-i])
              }
            }

            }
            else if(daysValue<originalDays){
              //reduce dates
                const minusDays = originalDays - daysValue
                for(let i=1; i<=minusDays; i++){
                  originalContentsContainer.removeChild(contents[contents.length-i])
                }
                newContents.forEach((item)=>{
                item.remove()
                })
            }
            else if(daysValue === originalDays){
              //remove all newtextarea
                newContents.forEach((item)=>{
                  item.remove()
                })
                resetContents()


            }
        }


        function editBlog(){
          form.style.display = 'flex'
          document.getElementById('detailContent').style.display = 'none'

        }
        function closeEdit(){
          form.style.display ='none'
          document.getElementById('detailContent').style.display = 'block';
        }

        const updateButton = document.getElementById('update');
        if(updateButton){
          updateButton.addEventListener('click', async (e)=>{
            e.preventDefault()
            // all contents as array
            const contentsInputs = Array.from(form.contents)
            let contents
            if(contentsInputs.length>1){
              contents = contentsInputs.map(item => item.value);
            }

            const endpoint = `/blogs/${updateButton.dataset.id}`
            const title = form.title.value;
            const days = form.days.value;
            const destination = form.destination.value;
            const notes = form.notes.value;

            try{
              const res = await fetch(endpoint,{
                method:'PATCH',
                body:JSON.stringify({title,days,destination,contents,notes}),
                headers:{'Content-Type':'application/json'}
              });
              if(res.ok){
                location.assign('/')
              }
            } catch(err){
              console.log(err)
            }
            })
        }




    </script>
</body>
</html>